{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\juhku\\\\Programs\\\\Udemy_kurssit\\\\React\\\\coltsteele_react\\\\react-lights-out\\\\src\\\\Cell.js\";\nimport React, { Component } from 'react';\nimport \"./Cell.css\";\n/** A single cell on the board.\r\n *\r\n * This has no state --- just two props:\r\n *\r\n * - flipCellsAroundMe: a function rec'd from the board which flips this\r\n *      cell and the cells around of it\r\n *\r\n * - isLit: boolean, is this cell lit?\r\n *\r\n * This handles clicks --- by calling flipCellsAroundMe\r\n *\r\n **/\n\nvar Cell =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cell, _Component);\n\n  function Cell(props) {\n    var _this;\n\n    _classCallCheck(this, Cell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cell).call(this, props));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cell, [{\n    key: \"handleClick\",\n    value: function handleClick(evt) {\n      // call up to the board to flip cells around this cell\n      this.props.flipCellsAround(this.props.coord);\n      console.log(this.props.coord);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\n      return React.createElement(\"td\", {\n        className: classes,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Cell;\n}(Component);\n\nexport default Cell;","map":{"version":3,"sources":["C:/Users/juhku/Programs/Udemy_kurssit/React/coltsteele_react/react-lights-out/src/Cell.js"],"names":["React","Component","Cell","props","handleClick","bind","evt","flipCellsAround","coord","console","log","classes","isLit"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAGA;;;;;;;;;;;;;IAaMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAFiB;AAGlB;;;;gCAEWC,G,EAAK;AACf;AACA,WAAKH,KAAL,CAAWI,eAAX,CAA2B,KAAKJ,KAAL,CAAWK,KAAtC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWK,KAAvB;AACD;;;6BAEQ;AACP,UAAIG,OAAO,GAAG,UAAU,KAAKR,KAAL,CAAWS,KAAX,GAAmB,WAAnB,GAAiC,EAA3C,CAAd;AAEA,aACI;AAAI,QAAA,SAAS,EAAED,OAAf;AAAwB,QAAA,OAAO,EAAE,KAAKP,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGD;;;;EAlBgBH,S;;AAsBnB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport \"./Cell.css\"\r\n\r\n\r\n/** A single cell on the board.\r\n *\r\n * This has no state --- just two props:\r\n *\r\n * - flipCellsAroundMe: a function rec'd from the board which flips this\r\n *      cell and the cells around of it\r\n *\r\n * - isLit: boolean, is this cell lit?\r\n *\r\n * This handles clicks --- by calling flipCellsAroundMe\r\n *\r\n **/\r\n\r\nclass Cell extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(evt) {\r\n    // call up to the board to flip cells around this cell\r\n    this.props.flipCellsAround(this.props.coord);\r\n    console.log(this.props.coord)\r\n  }\r\n\r\n  render() {\r\n    let classes = \"Cell\" + (this.props.isLit ? \" Cell-lit\" : \"\");\r\n\r\n    return (\r\n        <td className={classes} onClick={this.handleClick} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Cell"]},"metadata":{},"sourceType":"module"}